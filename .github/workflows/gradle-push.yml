name: Gradle Build

on:
  push:
    branches:
      - master
      - release/**
      - feature/**
      - bugfix/**
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  build:
    env:
     TERM: dumb
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: adopt

    - uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradlew-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradlew-

    - name: Compile and check with Gradle
      run: ./gradlew check jacocoTestReport

    - name: Publish Test Report
      if: failure()
      uses: scacap/action-surefire-report@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: '**/build/test-results/*/TEST-*.xml'

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        JAVA_HOME: ""
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=jmongard_Git.SemVersioning.Gradle
          -Dsonar.organization=jmongard
          -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
          -Dsonar.tests=src/test,src/functionalTest
          -Dsonar.sources=src/main

    - name: Build with Gradle
      run: ./gradlew build

    - run: git status

    - name: Publish gradle plugin
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" > ~/.gradle/gradle.properties
        echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
        ./gradlew publishPlugins