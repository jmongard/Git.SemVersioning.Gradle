/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package git.semver.plugin.gradle

import java.io.File
import org.gradle.testkit.runner.GradleRunner
import kotlin.test.Test
import kotlin.test.assertFalse
import kotlin.test.assertTrue
import org.assertj.core.api.Assertions.*

/**
 * A simple functional test for the 'git.semver.plugin.gradle.greeting' plugin.
 */
class GitSemverPluginFunctionalTest {
    @Test fun `can run task`() {
        // Setup the test build

        val projectDir = File("build/functionalTest")
        projectDir.mkdirs()
        projectDir.resolve("settings.gradle").writeText("include ':sub1'")
        projectDir.resolve("build.gradle").writeText("""
            plugins {
                id('com.github.jmongard.git-semver-plugin')
            }
            
            semver {
                defaultPreRelease='NEXT'
            }
            
            allprojects {
              version = semver.version
            }
            task testTask(dependsOn:printVersion) {
            doLast {
              println "ProjVer: " + project.version 
              }
            }
        """)

        var subProjectDir = File("build/functionalTest/sub1")
        subProjectDir.mkdirs()
        subProjectDir.resolve("build.gradle").writeText("""
            println("Sub1: " + project.version)            
        """.trimIndent())

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("--stacktrace")
        runner.withArguments("testTask")
        runner.withProjectDir(projectDir)

        val result = runner.build();

        // Verify the result
        assertThat(result.output).containsPattern("Version: \\d+\\.\\d+\\.\\d+")
        assertThat(result.output).containsPattern("ProjVer: \\d+\\.\\d+\\.\\d+")
        //assertThat(result.output).containsPattern("Sub1: \\d+\\.\\d+\\.\\d+")
    }
}
